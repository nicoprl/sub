#!/usr/bin/python3

"""
prod : http://api.thesubdb.com
dev : http://sandbox.thesubdb.com

test hash = edc1981d6459c6111fe36205b4aff6c2

http://sandbox.thesubdb.com/?action=search&hash=51db62cb6771850ebe9a1cf0abd9bdd1

"""

import os
import sys
import hashlib
import urllib.request

def main():
    if len(sys.argv) < 2:
        # download sub for every video file in folder
        for f in os.listdir(os.getcwd()):
            if os.path.splitext(f)[1].lower() in ['.mp4', '.mkv', '.avi']:
                movieHash = get_hash(f)
                get_sub(movieHash, f, os.path.splitext(f)[1])
    elif sys.argv[1] == '-f':
        # download sub for specific file
        movieHash = get_hash(sys.argv[2])
        get_sub(movieHash, sys.argv[2], os.path.splitext(sys.argv[2])[1])
    elif sys.argv[1] == '-h' or sys.argv[1] == '--help':
        # print usages
        print('Open shell in video directory')
        print('sub : download sub for every video file in folder')
        print('sub -f [movie_file_name]: download sub for movie_file_name only')
        sys.exit(0)

def get_sub(movieHash, movieName, movieNameExt):
    headers = {"User-Agent": "SubDB/1.0 (nicoprl-subdbCLI/1.0; http://github.com/nicoprl)"}
    url = 'http://api.thesubdb.com?action=search&hash=' + movieHash
    r = urllib.request.Request(url, headers=headers)
    try:
        with urllib.request.urlopen(r) as rep:
            available_languages = rep.read().decode('utf-8').split(',')
            if 'en' in available_languages:
                print(movieName, 'english subtitle found for hash', movieHash)
                sub_name = movieName.replace(movieNameExt,'.srt')
                sub_path = os.getcwd() + "/" + sub_name
                url = 'http://api.thesubdb.com?action=download&language=en&hash=' + movieHash
                r = urllib.request.Request(url, headers=headers)
                with urllib.request.urlopen(r) as rep:
                    with open(sub_path, 'wb') as subfile:
                        subfile.write(rep.read())
                        print(sub_name, 'written to', sub_path)
            else:
                print(movieName, 'english subtitle NOT found for hash', movieHash)
                print(movieName, 'available language(s):', available_languages)
    except urllib.error.HTTPError as e:
        print(movieName, 'HTTPError:', e)
    except Exception as e:
        print(movieName, 'exception:', e)

def get_hash(name):
    readsize = 64 * 1024
    try:
        with open(name, 'rb') as f:
            size = os.path.getsize(name)
            data = f.read(readsize)
            f.seek(-readsize, os.SEEK_END)
            data += f.read(readsize)
    except FileNotFoundError as e:
        print(name, e)
        sys.exit(1)
    except Exception as e:
        print(name, e)
    else:
        return hashlib.md5(data).hexdigest()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("KeyboardInterrupt")
        sys.exit(1)
